name: AWS Terraform Deploy

on:
  push:
    branches:
      - <YOUR-BRANCH-NAME>
  workflow_dispatch:

jobs:
  terraform:
    name: "Deploy Terraform"
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout the repository
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      # ✅ Set up Terraform
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.7.0"

      # ✅ Configure AWS Credentials (OIDC or static keys)
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      # ✅ Terraform Init
      - name: "Terraform Init"
        run: terraform init

      # ✅ Terraform Validate
      - name: "Terraform Validate"
        run: terraform validate

      # ✅ Terraform Plan
      - name: "Terraform Plan"
        run: terraform plan -out=tfplan
        env:
          TF_VAR_authorized_ips: ${{ secrets.AUTHORIZED_IPS }}
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_cluster_name: ${{ secrets.CLUSTER_NAME }}
          TF_VAR_create_redis_cluster: ${{ secrets.CREATE_REDIS_CLUSTER }}
          TF_VAR_create_redis_replication_group: ${{ secrets.CREATE_REDIS_REPLICATION_GROUP }}
          TF_VAR_db_engine: ${{ secrets.DB_ENGINE }}
          TF_VAR_db_engine_version: ${{ secrets.DB_ENGINE_VERSION }}
          TF_VAR_db_instance_type: ${{ secrets.DB_INSTANCE_TYPE }}
          TF_VAR_db_name: ${{ secrets.DB_NAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_port: ${{ secrets.DB_PORT }}
          TF_VAR_db_user: ${{ secrets.DB_USER }}
          TF_VAR_default_AWS_profile: ${{ secrets.DEFAULT_AWS_PROFILE }}
          TF_VAR_eks_access_entries: ${{ secrets.EKS_ACCESS_ENTRIES }}
          TF_VAR_logs_bucket: ${{ secrets.LOGS_BUCKET }}
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_redis_cluster_id: ${{ secrets.REDIS_CLUSTER_ID }}
          TF_VAR_redis_engine: ${{ secrets.REDIS_ENGINE }}
          TF_VAR_redis_parameter_group_family: ${{ secrets.REDIS_PARAMETER_GROUP_FAMILY }}
          TF_VAR_tfstate_bucket: ${{ secrets.TFSTATE_BUCKET }}
          TF_VAR_vpc_cidr: ${{ secrets.VPC_CIDR }}
          TF_VAR_db_allocated_storage: ${{ vars.DB_ALLOCATED_STORAGE }}
          TF_VAR_db_max_allocated_storage: ${{ vars.DB_MAX_ALLOCATED_STORAGE }}
          TF_VAR_environment: ${{ vars.ENVIRONMENT }}
          TF_VAR_node_max_size: ${{ vars.NODE_MAX_SIZE }}
          TF_VAR_node_min_size: ${{ vars.NODE_MIN_SIZE }}
          TF_VAR_node_size: ${{ vars.NODE_SIZE }}
          TF_VAR_region: ${{ vars.REGION }}

      # ✅ Terraform Apply
      - name: "Terraform Apply"
        run: terraform apply -auto-approve tfplan
